[
  {
    "objectID": "posts/first-post.html",
    "href": "posts/first-post.html",
    "title": "Posts Section",
    "section": "",
    "text": "Week 1 Reflection\nThis week in lab I had learned SystemVerilog programming on Lattice Radiant through basic case statements and also how to use QuestaSim and testbenches in debugging and verifying the codes give desired outcome (similar to C++’s test cases). In Lecture, I learned about what is propagation delay and contamination delay in flip-flop and also the setup time constrains and holdtime constraints. These are useful knowledge coming into digital design interview and working with synchronous clock system. In class, we also practiced in designing a finite state machine. Through the lab checkoff this week, I realized the harm of floating reset could cause whether the led works depends on luck. The course really trained me up in developing determination in achieveing all the lab’s goal.\nThe AI Prototype turns out to work better than I imagined. I put in some sample codes and the truth table of the XOR-AND into chat-GPT 4 free trial. It’s outputs did successfully synthesized on first try. instead of using the simple operators like ^ and & for XOR and AND relation, chat-GPT just write a combinational case statements for each line of the truth table. Moreover, it doesn’t realized using a low-speed oscillator can make a 2.4 Hz blinking. Instead it kept the HSOSC module from sample code and says for reset (if counter &gt;= 10000000 begin) slow_clk &lt;= ~slow_clk; I’m not entirely sure what it means by slow_clk as there is almost no useful comments on the Chat-GPT code. There is also no reset.\n‌"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "E155 Portfolio",
    "section": "",
    "text": "Xiyuan Liu (Amy) is a Junior Undergraduate Student at Harvey Mudd College majoring in Engineering with the concentration on computer and electric engineering. Her career interests are in the field of embeded systems and automation. In her free time, she enjoys making digital arts and watching animes. If you have any questions or suggestion regarding contents of this site, feel free to contact me through this email: amyliu01@g.hmc.edu."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "E155 Blog",
    "section": "",
    "text": "Posts Section\n\n\n\n\n\n\n\n\n\n\n\nSep 6, 2024\n\n\nAmy Liu\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "labs/lab1/lab1.html",
    "href": "labs/lab1/lab1.html",
    "title": "E155 Portfolio",
    "section": "",
    "text": "The main goal of this assignment is to learn SMD in board assembly and learn how to use Lattice Radiant to write basic combinational System Verilog codes. By the end of this week’s lab, I hope I can learn how to write Verilog code to test out the hardware on board, perform logic simulations in Radiant, and deepen my understanding of circuit debugging. We are going to use on-board led to test the FPGA and also construct a functional hexadecimal 7-segment display.\nDesign Approach In the case of testing the board, the lab manual suggested implementing a XOR and AND relationship for the ON/OFF status of two led while letting the third led shine at 2.4 Hz. I used low speed oscillators with 10k Hz and counter [11:0] so that 10k/2^12 = 2.44Hz. I also included a reset to make sure the simulation works correctly and we are not starting at a random value every time. When working with the seven segment display, it’s good to use combinational logic to make case statements for each combination of 4 binary switches. I draw out the diagram for a seven segment display and assign seg[0] to be the segment a, seg[1] to be segment b according to the ascending order and assign free pins under FPGA for later breadboard testing. Here is the block diagram of the top module:\nTesting Approach To make sure the design works as expected, I tested both through hardware breadboarding onto an actual 7 segment display led and also used QuestaSim inside Lattice Radiant. I ran through all possible combinations of 4 binary switches to ensure no edge cases are left. Here is the schematics for the circuit of 7 segment display: image: images1.jfif This is picture for the output successful runthrough of testbenches: Seven-segment display\nXOR_AND\nThe design meets all the requirements that we can alternate between 0-9 and A-F through controlling the four on-off switches. This is a picture of the board displaying on the letter F:\nNumber of hours spent: 18 hrs."
  },
  {
    "objectID": "labs/lab1/lab1.html#lab-1fpga-and-mcu-setup-and-testing",
    "href": "labs/lab1/lab1.html#lab-1fpga-and-mcu-setup-and-testing",
    "title": "E155 Portfolio",
    "section": "",
    "text": "The main goal of this assignment is to learn SMD in board assembly and learn how to use Lattice Radiant to write basic combinational System Verilog codes. By the end of this week’s lab, I hope I can learn how to write Verilog code to test out the hardware on board, perform logic simulations in Radiant, and deepen my understanding of circuit debugging. We are going to use on-board led to test the FPGA and also construct a functional hexadecimal 7-segment display.\nDesign Approach In the case of testing the board, the lab manual suggested implementing a XOR and AND relationship for the ON/OFF status of two led while letting the third led shine at 2.4 Hz. I used low speed oscillators with 10k Hz and counter [11:0] so that 10k/2^12 = 2.44Hz. I also included a reset to make sure the simulation works correctly and we are not starting at a random value every time. When working with the seven segment display, it’s good to use combinational logic to make case statements for each combination of 4 binary switches. I draw out the diagram for a seven segment display and assign seg[0] to be the segment a, seg[1] to be segment b according to the ascending order and assign free pins under FPGA for later breadboard testing. Here is the block diagram of the top module:\nTesting Approach To make sure the design works as expected, I tested both through hardware breadboarding onto an actual 7 segment display led and also used QuestaSim inside Lattice Radiant. I ran through all possible combinations of 4 binary switches to ensure no edge cases are left. Here is the schematics for the circuit of 7 segment display: image: images1.jfif This is picture for the output successful runthrough of testbenches: Seven-segment display\nXOR_AND\nThe design meets all the requirements that we can alternate between 0-9 and A-F through controlling the four on-off switches. This is a picture of the board displaying on the letter F:\nNumber of hours spent: 18 hrs."
  }
]